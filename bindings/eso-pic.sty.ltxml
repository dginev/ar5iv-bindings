# -*- mode: Perl -*-
# /=====================================================================\ #
# | eso-pic.sty                                                         | #
# | Implementation for LaTeXML                                          | #
# |=====================================================================| #

package LaTeXML::Package::Pool;
use strict;
use warnings;
use LaTeXML::Package;

#======================================================================
RequirePackage('xcolor');
RequirePackage('keyval');
#RequirePackage('eepic');
#  /--------------------------------------------------------------------\
# | INCOMPLETE IMPLEMENTATION                                           |
# | just a stub ignoring the functionality for now                      |
# | feel invited to contribute upgrades!                                |
#  \--------------------------------------------------------------------/
DefMacro('\AddToShipoutPicture OptionalMatch:* {}',   Tokens());
DefMacro('\AddToShipoutPictureBG OptionalMatch:* {}', Tokens());
DefMacro('\AddToShipoutPictureFG OptionalMatch:* {}', Tokens());
DefMacro('\AtPageCenter OptionalMatch:* {}',          Tokens());
DefMacro('\AtPageLowerLeft OptionalMatch:* {}',       Tokens());
DefMacro('\AtPageUpperLeft OptionalMatch:* {}',       Tokens());
DefMacro('\AtStockCenter OptionalMatch:* {}',         Tokens());
DefMacro('\AtStockLowerLeft OptionalMatch:* {}',      Tokens());
DefMacro('\AtStockUpperLeft OptionalMatch:* {}',      Tokens());
DefMacro('\AtTextCenter OptionalMatch:* {}',          Tokens());
DefMacro('\AtTextLowerLeft OptionalMatch:* {}',       Tokens());
DefMacro('\AtTextUpperLeft OptionalMatch:* {}',       Tokens());
DefMacro('\ClearShipoutPicture',                      Tokens());
DefMacro('\ClearShipoutPictureBG',                    Tokens());
DefMacro('\ClearShipoutPictureFG',                    Tokens());
DefMacro('\LenToUnit{}',                              '#1');
DefMacro('\ProcessOptionsWithKV{}',                   Tokens());
DefMacro('\gridSetup[]{}{}{}{}{}',                    Tokens());
#======================================================================
1;
